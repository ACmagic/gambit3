npm install xxx --save-dev --no-bin-links

http://perrymitchell.net/article/npm-symlinks-through-vagrant-windows/

bower install PACKAGE --save

-------------------------------------------------

json matching notes

select  * from sale_advertised_lines WHERE JSON_CONTAINS(predictions_cache,'{"type":"Modules\\\\Sales\\\\Entities\\\\SalePointSpread","spread": 4,"game_id": 10,"pick_id": 240}','$[0]','$[1]','$[2]','$[3]');
select * from sale_advertised_lines;

The trick: >= 5.7.9

select  * from sale_advertised_lines WHERE JSON_CONTAINS(predictions_cache->'$[*]','{"type":"Modules\\\\Sales\\\\Entities\\\\SalePointSpread","spread": 10,"game_id": 5,"pick_id":28}');

The syslogic JSON_* functions don't support the -> syntax... errors out. Figure out a wrok around or need to fork and add to library. I prefer not to fork.

select  * from sale_advertised_lines WHERE JSON_CONTAINS(predictions_cache,'{"type": "Modules\\\\Sales\\\\Entities\\\\SalePointSpread", "spread": 5, "game_id": 1, "pick_id": 11}','$[*]');


Try to slightly change what it looks like...

select  * from sale_advertised_lines WHERE JSON_CONTAINS(predictions_cache->'$[*]','{"type": "Modules\\Sales\\Entities\\SalePointSpread", "spread": 5, "game_id": 1, "pick_id": 11}');

Using json contains path

select  * from sale_advertised_lines WHERE JSON_CONTAINS_PATH('{"type": "Modules\\\\Sales\\\\Entities\\\\SalePointSpread", "spread": 5, "game_id": 1, "pick_id": 11}','one','@predictions_cache[0]');

--------------------------------------------------

MySQL >= 5.7.8

Project requires MySQL w/ JSON support.

Must install PHP manually since no way to this in puphpet exists yet. Puphpet
gives you a very old version of 5.7 that does not include json support.

https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-14-04

-- doctrine/dbal was forked to add json support for mysql versions >= 5.7.8. Hopefully
doctrine master will add support in the future.

---------------------------------------------------

Recipe: Tear down and up the db

php artisan doctrine:migrations:refresh
php artisan gambit:core:seed

--------------------------------------------------

command line xdebug

export PHP_IDE_CONFIG="serverName=local.kyle"
export XDEBUG_CONFIG="idekey=PHPStorm"

---------------------------------------------------

redis

Command to start redis server:

redis-server

---------------------------------------------------

seeker
house

----------------------------------------------------

Install dataset
test dataset

----------------------------------------------------

Buy credits


-----------------------------------------------------


$items = $quote->getItems();



$prediction = PredictionFactory::makePrediction($postData);


Cart::addPrediction($prediction);



cart/add/prediction  []


cart/add/line []